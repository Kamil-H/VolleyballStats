insert:
INSERT OR IGNORE INTO match_model (id, state, date, tour_id)
VALUES (?, ?, ?, ?)
ON CONFLICT(id) DO UPDATE SET state = state, date = date;

selectAll:
SELECT * FROM match_model;

selectAllMatchesByTour:
SELECT match_model.*, match_set.end_time,
(CASE WHEN match_set.home_score > match_set.away_score THEN home_team.team_id ELSE away_team.team_id END) AS winner_team_id
FROM match_model
LEFT JOIN
match_statistics_model match_statistics ON match_model.match_statistics_id = match_statistics.id
LEFT JOIN
set_model match_set ON match_set.match_statistics_id = match_statistics.id
LEFT JOIN
tour_team_model home_team ON match_statistics.home = home_team.id
LEFT JOIN
tour_team_model away_team ON match_statistics.away = away_team.id
WHERE match_model.tour_id = (SELECT id FROM tour_model WHERE tour_year = :tour_year AND league_id = (SELECT (id) FROM league_model WHERE country = :country AND division = :division))
AND CASE WHEN match_model.match_statistics_id IS NULL THEN TRUE ELSE match_set.number = (SELECT MAX(number) FROM set_model WHERE set_model.match_statistics_id = match_model.match_statistics_id) END;

updateMatchReport:
UPDATE match_model
SET match_statistics_id = ?
WHERE id = ?;