insert:
INSERT INTO play_attack_model (play_id, side_out, block_attempt, dig_attempt, receive_effect, receive_id, set_effect, setter_id)
VALUES (?, ?, ?, ?, ?, ?, ?, ?);

selectAll:
SELECT * FROM play_attack_model;

selectAllAttacksByTourId:
SELECT attack.*, receive_player_id.player_id AS receive_player_id, setter_player_id.player_id AS setter_player_id,
play_model.break_point, play_model.effect, play_model.position, team_player.player_id AS player_id, team.team_id AS team_id,
point_model.id AS point_id, play_model.play_index AS play_index
FROM play_attack_model attack
INNER JOIN
play_model ON play_model.id = play_id,
point_model ON point_model.id = play_model.point_id,
set_model ON set_model.id = point_model.set_id,
team_player_model team_player ON play_model.player_id = team_player.id,
tour_team_model team ON team_player.tour_team_id = team.id
LEFT JOIN
team_player_model receive_player_id ON receive_player_id.id = attack.receive_id
LEFT JOIN
team_player_model setter_player_id ON setter_player_id.id = attack.setter_id
WHERE set_model.match_id IN (SELECT id FROM match_statistics_model WHERE tour_id = ?);

selectAttackStats:
SELECT
name,
COUNT(*) AS attempts,
ROUND(SUM(effect_perfect) / COUNT(*) * 100.0, 2) AS kill,
ROUND((SUM(effect_perfect) - SUM(effect_error) - SUM(effect_half)) / COUNT(*) * 100.0, 2) AS efficiency,
ROUND((SUM(effect_error) + SUM(effect_half)) / COUNT(*) * 100.0, 2) AS error,
ROUND((SUM(point_win)) / COUNT(*) * 100.0, 2) AS point_win_percent,

ROUND(SUM(effect_perfect_break_point) / SUM(break_point) * 100.0, 2) AS kill_break_point,
ROUND((SUM(effect_perfect_break_point) - SUM(effect_error_break_point) - SUM(effect_half_break_point)) / SUM(break_point) * 100.0, 2) AS efficiency_break_point,
ROUND((SUM(effect_error_break_point) + SUM(effect_half_break_point)) / SUM(break_point) * 100.0, 2) AS error_break_point,

ROUND(SUM(effect_perfect_side_out) / SUM(side_out) * 100.0, 2) AS kill_side_out,
ROUND((SUM(effect_perfect_side_out) - SUM(effect_error_side_out) - SUM(effect_half_side_out)) / SUM(side_out) * 100.0, 2) AS efficiency_side_out,
ROUND((SUM(effect_error_side_out) + SUM(effect_half_side_out)) / SUM(side_out) * 100.0, 2) AS error_side_out

FROM attack_view
WHERE tour_id = 2
GROUP BY player_team
ORDER BY efficiency DESC;