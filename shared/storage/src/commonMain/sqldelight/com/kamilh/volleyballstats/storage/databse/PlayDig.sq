insert:
INSERT INTO play_dig_model (play_id, after_side_out, attacker_id, rebounder_id)
VALUES (?, ?, ?, ?);

selectAll:
SELECT * FROM play_dig_model;

selectAllDigsByMatchId:
SELECT dig.*, attacker_player_id.player_id AS attacker_player_id, rebounder_player_id.player_id AS rebounder_player_id,
play_model.break_point, play_model.effect, play_model.position, team_player.player_id AS player_id, team.team_id AS team_id,
point_model.id AS point_id, play_model.play_index AS play_index
FROM play_dig_model dig
INNER JOIN
play_model ON play_model.id = dig.play_id,
point_model ON point_model.id = play_model.point_id,
set_model ON set_model.id = point_model.set_id,
team_player_model team_player ON play_model.player_id = team_player.id,
tour_team_model team ON team_player.tour_team_id = team.id
LEFT JOIN
team_player_model attacker_player_id ON attacker_player_id.id = dig.attacker_id
LEFT JOIN
team_player_model rebounder_player_id ON rebounder_player_id.id = dig.rebounder_id
WHERE set_model.match_id = ?;

selectDigStats:
SELECT
specialization, name, code,
COUNT(*) AS attempts,
SUM(effect_perfect) AS digs,
ROUND(SUM(effect_perfect)/ COUNT(*) * 100.0, 2) AS success_percent,
SUM(effect_error) AS errors,
ROUND((SUM(point_win)) / COUNT(*) * 100.0, 2) AS point_win_percent
FROM dig_view
WHERE
CASE WHEN :seasonsIsEmpty THEN TRUE ELSE season IN :seasons END AND
CASE WHEN :specializationsIsEmpty THEN TRUE ELSE specialization IN :specializations END AND
CASE WHEN :teamIdsIsEmpty THEN TRUE ELSE player_team_id IN :teamIds END

GROUP BY
(CASE WHEN :group_by = 'player' THEN player_id ELSE
(CASE WHEN :group_by = 'team' THEN player_team_id ELSE name
END) END)

HAVING COUNT(*) >= :min_attempts

ORDER BY
(CASE WHEN :sort_type = 'attempts' THEN attempts ELSE
(CASE WHEN :sort_type = 'digs' THEN digs ELSE
(CASE WHEN :sort_type = 'success_percent' THEN success_percent ELSE
(CASE WHEN :sort_type = 'errors' THEN errors ELSE
(CASE WHEN :sort_type = 'point_win_percent' THEN point_win_percent ELSE name
END) END) END) END) END)
DESC;
